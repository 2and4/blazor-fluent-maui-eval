import{BrotliDecode}from"./js/external/decode.min.js";self.addEventListener("install",(e=>self.skipWaiting())),self.addEventListener("activate",(e=>e.waitUntil(clients.claim()))),self.addEventListener("fetch",(e=>{const t=e.request,s=new URL(t.url).pathname;if(!s.endsWith(".razor.js")&&s.endsWith(".js")||s.endsWith(".css")||s.endsWith(".wasm")||s.endsWith(".dat")){const r=new Request(t.url+".br",{method:t.method,headers:t.headers,mode:t.mode,credentials:t.credentials,redirect:t.redirect,referrer:t.referrer,integrity:t.integrity,cache:t.cache});e.respondWith(fetch(r).then((async e=>{if(e.ok){const t=await e.arrayBuffer(),r=new Int8Array(t),n=BrotliDecode(r);let i="application/octet-stream";return s.endsWith(".js")&&(i="text/javascript"),s.endsWith(".css")&&(i="text/css"),s.endsWith(".wasm")&&(i="application/wasm"),new Response(n,{headers:{"content-type":i}})}return fetch(t)})).catch((e=>fetch(t))))}else e.respondWith(fetch(t))}));